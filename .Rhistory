sample=c(-5.208842,  3.426063, -5.449295,  1.489225, 28.816881, -3.092396, 24.591726,  6.195691, 23.326360)
sample
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
sample=c(31.943075,  1.139502,  8.167945,  9.047540, 32.102479, 40.293676,  9.475453, 19.671234, 27.153397)
pnorm((mean(sample)-25)/4)*2
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
sample=c(14.786441, 19.768012, 24.893697, -2.992949, 33.094201, 33.299370, 14.238745,  9.444914, 18.905951)
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
samples
dim(samples)
nrow(samples)
ncol(samples)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
dim(allsamples)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
allsamples
str(allsamples)
allsamples[1]
dim(allsamples[1])
dim(allsamples[[1])
dim(allsamples[[1])
dim(allsamples[[1]])
dim(allsamples[[2]])
mean(allsamples[[2]])
mean(allsamples[[5]])
mean(allsamples[[1]])
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
mean(allsamples[[1000]])
mean(allsamples[[5000]])
mean(allsamples[[5001]])
mean(allsamples[[4001]])
mean(allsamples[[3001]])
mean(allsamples[[2001]])
mean(allsamples[[1001]])
mean(allsamples[[500]])
allsamples[[500]]]
allsamples[[500]]
dim(allsamples[[500]])
allsamples[[500]][1,3]
lapply(allsamples,mean)
sapply(allsamples,mean)
plot(mu1,sapply(allsamples,mean))
plot(mu1,sapply(allsamples,mean),t='l')
plot(sapply(allsamples,mean),t='l')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
wilc=seq(500)
wilc
wilc=seq()
wilc
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betaz
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
lapply(allsamples[[1]],mean)
sapply(allsamples[[1]],mean)
apply(allsamples[[1]],1,mean)
apply(allsamples[[1]],1,function(sample){print(sample)})
apply(allsamples[[1]],1,function(sample){length(sample)})
abs(1)
abs(-1)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betaz
plot(mu1,betaz)
plot(mu1,betaz,t='l',col='red')
plot(mu1,1-betaz,t='l',col='red')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
sample
sd(sample)
t.test(sample)
c(550, 600, 450, 400, 610, 500)
x=c(550, 600, 450, 400, 610, 500)
sd(s)
sd(x)
var(x)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betat
plot(mu1,betat)
plot(mu1,betat-1)
plot(mu1,betat,t)
plot(mu1,betat,t='l')
plot(mu1,betaz,t='l',col='red')
lines(mu1,betat,t='l',col='blue')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
plot(mu1,betaz,t='l',col='red')
lines(mu1,betat,t='l',col='blue')
lines(mu1,betaw,t='l',col='green')
plot(mu1,betaz,t='l',col='red')
getwd()
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/Homework6/HW6_H24.R')
getwd()
source('C:/Users/kanis_000/SkyDrive/Documents/HW6_H24.R')
source('C:/Users/kanis_000/SkyDrive/Documents/HW6_H24.R')
P1 = rbind(
+ c(3/4,1/4, 0, 0, 0), #
+ c(2/4,1/4,1/4, 0, 0), # G
+ c(3/4, 0, 0,1/4, 0), # GA
+ c(2/4,1/4, 0, 0,1/4), # GAG
+ c(3/4, 0, 0,1/4, 0) # GAGA
+ )
P1 = rbind(
c(3/4,1/4, 0, 0, 0), #
c(2/4,1/4,1/4, 0, 0), # G
c(3/4, 0, 0,1/4, 0), # GA
c(2/4,1/4, 0, 0,1/4), # GAG
c(3/4, 0, 0,1/4, 0) # GAGA
)
P1 = rbind(
c(3/4,1/4, 0, 0, 0), #
c(2/4,1/4,1/4, 0, 0), # G
c(3/4, 0, 0,1/4, 0), # GA
c(2/4,1/4, 0, 0,1/4), # GAG
c(3/4, 0, 0,1/4, 0))
p1
P1
P1''
t(P1)
rbind(t(P1),c(1,1,1,1,1))
rbind(t(P1)-diag(1,5),c(1,1,1,1,1))
solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,1)
)
?solve
solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,0,1))
qr.solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,0,1))
qr.solvw
qr.solve
?qr.solve
P1=cbind((0.7,0.3),(0.4,0.6))
P1=cbind((0.7,0.3),(0.4,0.6))
P1=rbind((0.7,0.3),(0.4,0.6))
P1=cbind((0.7,0.3),(0.4,0.6))
P1=cbind(c(0.7,0.3),c(0.4,0.6))
P1
P1-diag(1,2)
rbind(P1-diag(1,2),c(1,1))
qr.solve(rbind(P1-diag(1,2),c(1,1)),c(0,0,1))
3/7
4/7
P1
c(1,1)
c(1,1)%*%P1
t(c(1,1))%*%P1
t(c(1,2))%*%P1
?inv
?inverse
1.75*2
*2
*23.5*2
3.5*2
7/4
p1
P1
[0.6 0.3; 0.4 0.7]
rbind(c(0.6 0.3),c( 0.4 0.7))
rbind(c(0.6, 0.3),c( 0.4 ,0.7))
rbind(c(0.6, 0.3),c( 0.4 ,0.7))-diag(1,2)
v1=rbind(c(0.6, 0.3),c( 0.4 ,0.7))-diag(1,2)
rbind(v1,c(1,1))
qr.solve(rbind(v1,c(1,1)),(0,0,1))
qr.solve(rbind(v1,c(1,1)),c(0,0,1))
1/qr.solve(rbind(v1,c(1,1)),c(0,0,1))
4/7
3/7
p1=
;
p1=rbind(c(0.8,0.2,0,0),c(0.5,0.2,0.3,0),c(0.8,0,0,0.2),c(0.5,0.2,0.3,0))
p1
t(p1)
t(p1)-diag(1,4)
rbind(t(p1)-diag(1,4),c(1,1,1,1))
qr.solve(rbind(t(p1)-diag(1,4),c(1,1,1,1)),c(0,0,0,0,1))
getwd()
data=read.table('H30data.txt')
data
dim(data)
data[1,]
x=data[1,]
y=data[2,]
x=as.numeric(x)
x
y=as.numeric(y)
cov(x,y)
cov(y,x)
rbind(x,y)
Mat=rbind(x,y)
apply(Mat,2,mean)
apply(Mat,1,mean)
xcentered=x-mean(x)
ycentered=y-mean(y)
plot(xcentered,ycentered)
M=rbind(xcentered,ycentered)
M%*%t(M)
M%*%t(M)/(100-1)
bestfit=lm(y~I(x))
bestfit
x
y
bestfit
q()
getwd()
dir()
setwd("Glass Rotation Data/
")
setwd("Glass Rotation Data/")
getwd()
data=read.table("peaksOnly.txt")
?data
View(data)
data.type(data)
class(data)
data[11]
View(data)
sum(data[9]>50)
sum(data[9]>0)
sum(data[11]<0.1)
sum(data[11]<0.2)
sum(data[11]<0.3)
sum(data[11]<0.4)
sum(data[11]<0.5)
sum(data[11]<0.51)
sum(data[11]<0.60)
sum(data[11]<0.70)
sum(data[11]<0.90)
sum(data[11]>0.90)
hist(data[11])
class(data[11])
as.numeric(data[11])
unlist(as.numeric(data[11]))
unlist(data[11])
hist(unlist(data[11]))
hist(unlist(data[11]),500)
sum(data[11]>1)
hist(unlist(data[9]),500)
hist(unlist(data[9]),50)
hist(unlist(data[9]),50)
hist(unlist(data[9]),500)
install.packages("intervals")
require('intervals')
data[2]
unique[data[2]]
unique(data[2])
data[2]=="chr1"
data[data[2]=="chr1"]
unique(data[2])
getwd()
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(data)
View(macsData)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(macsData)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(macsData)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(macsData)
View(data)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(homeData)
unique(macsdata[1])
unique(macsData[1])
length(unique(macsData[1]))
len(unique(macsData[1]))
nr(unique(macsData[1]))
nrow(unique(macsData[1]))
nrow(unique(homerData[2]))
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
nrow(unique(homerData[2]))
unique(homerData[2])
unique(homerData[2])
unique(homerData[2])
nrow(unique(homerData[2]))
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
nrow(unique(macsData[1]))
unique(macsData[1])
unique(homerData[2])
intersect(unique(macsData[1],unique(homerData[2]))
)
intersect(unique(macsData[1]),unique(homerData[2]))
intersect(unlist(unique(macsData[1])),unlist(unique(homerData[2]))
)
intersect(unlist(unique(macsData[1])),unlist(unique(homerData[2])))
common_chromosomes=intersect(unlist(unique(macsData[1])),unlist(unique(homerData[2])))
dim(common_chromosomes)
nrow(common_chromosomes)
length(common_chromosomes)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(macsData)
View(homerData)
View(homerData)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(homerData)
View(homerData)
View(macsData)
View(macsData)
View(homerData)
View(macsData)
View(homerData)
View(macsData)
order(homerData$chr)
homerData[order(homerData$chr)]
homerData[order(homerData$chr),]
tempData=homerData[order(homerData$chr),]
View(tempData)
View(tempData)
tempData[1:100,]
tempData[1:100,3]
tempData[1:100,2]
tempData[1:1000,2]
tempData[1:10000,2]
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(homerData)
View(homerData)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(macsData)
View(macsData)
macsData$chr[1:10000]
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
length(chromosomes_homer)<length(chromosomes_macs)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
sum(homerData$chr=="chr1")
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
homerData[2]==chr_name
homerData[2]
homerData[2]==chr10
homerData[2]=="chr10"
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(chr_values_mat)
class(chr_values_mat
)
nrow(chr_values_mat
)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(chr_values_mat)
View(chr_values_mat)
View(chr_values_mat)
View(chr_values_mat)
nrow(chr_values_mat)
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
require("intervals")
help()
about()
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
intervals
col1=c(5,1,15,50)
col2=c(10,4,40,67)
cbind(col1,col2)
to=cbind(col1,col2)
to
cola=(55,35,7,-5)
cola=c(55,35,7,-5)
colb=c(60,45,13,3)
from=cbind(cola,colb)
from
intervals_overlap(to,from)
interval_overlap(to,from)
to_int=interval(to)
to_int=Intervals(to)
to_int
from_int=Intervals(from)
from_int
interval_overlap(to_int,from_int)
cola=c(85,35,7,-5)
colb=c(160,45,13,3)
from=cbind(cola,colb)
from_int=Intervals(from)
interval_overlap(to_int,from_int)
unlist(interval_overlap(to_int,from_int))
from_int
to_int
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
interval_overlap(from_int,to_int)
unlist(interval_overlap(from_int,to_int))
length(unlist(interval_overlap(from_int,to_int)))
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
chr_values_mat
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
homerVsMacs
str(homerVsMacs)
rownames(chr_values_ma)
rownames(chr_values_mat)
colnames(chr_values_mat)
colnames(homerVsMacs)
colnames(homerVsMacs)<-c("Number of MACs peaks", "Number of Homer Peaks", "Shared Peaks")
homerVsMacs
homerVsMacs[,1:5]
homerVsMacs[1:5,]
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
homerVsMacs[1:5,]
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
homerVsMacs[1:5,]
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
install.packages("gridExtra")
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
install.packages("xtable")
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
total_sums
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
View(homerData)
View(macsData)
View(homerVsMacs)
View(macsData)
View(homerData)
View(chr_values_mat)
View(homerData)
names(macsData)
